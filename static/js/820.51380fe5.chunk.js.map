{"version":3,"file":"static/js/820.51380fe5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MyContacts/MyContacts.module.css?73b2","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/Contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Phonebook.jsx","components/MyContacts/MyContacts.jsx","Pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MyContacts_wrapper__IoaG7\",\"title\":\"MyContacts_title__nDQDO\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"button\":\"ContactList_button__7kL4l\",\"item\":\"ContactList_item__EZYHO\"};","//  export const selectAllContacts = store => store.contacts;\n\n// export const selectFilteredContacts = store => {\n//   const { contacts, filter } = store;\n\n//   const normalizedFilter = filter.toLocaleLowerCase();\n\n//   const filteredContacts = contacts.items.filter(({ name }) => {\n//     const normalizedName = name;\n\n//     return normalizedName.includes(normalizedFilter);\n//   });\n\n//   return filteredContacts;\n// };\nimport { createSelector } from '@reduxjs/toolkit';\nexport const selectAllContacts = store => store.contacts;\n\nexport const selectFilter = store => store.filter;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectContacts = store => store.contacts.items;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/Contacts/contacts-selectors';\nimport { deleteContacts } from '../../redux/Contacts/contacts-operations';\n\nexport const ContactList = () => {\n  const items = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n  const elements = items.map(({ id, name, phone }) => (\n    <li className={css.list} key={id}>\n      {name}:{phone}\n      <button\n        className={css.button}\n        onClick={() => dispatch(deleteContacts(id))}\n        type=\"button\"\n      >\n        Delete\n      </button>\n    </li>\n  ));\n  return <ol className={css.item}>{elements}</ol>;\n};\n\nexport default ContactList;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Phonebook_form__J23fu\",\"formGroup\":\"Phonebook_formGroup__pQFfU\",\"button\":\"Phonebook_button__QiRKB\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from './Phonebook.module.css';\nimport { useDispatch } from 'react-redux';\n\nimport { addContacts } from '../../redux/Contacts/contacts-operations';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n\n  const nameId = nanoid();\n  const phoneId = nanoid();\n  const [value, setValue] = useState({ ...INITIAL_STATE });\n\n  const onAddContact = data => {\n    dispatch(addContacts(data));\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setValue(preState => ({ ...preState, [name]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddContact(value);\n    reset();\n  };\n\n  const reset = () => {\n    setValue({ ...INITIAL_STATE });\n  };\n\n  const { name, phone } = value;\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.formGroup}>\n        <label htmlFor={nameId}>Name</label>\n        <input\n          className={css.input}\n          id={nameId}\n          placeholder=\"Name contacts\"\n          name=\"name\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </div>\n      <div className={css.formGroup}>\n        <label className={css.title} htmlFor={phoneId}>\n          Number\n        </label>\n        <input\n          className={css.input}\n          id={phoneId}\n          placeholder=\"Number contacts\"\n          type=\"text\"\n          name=\"phone\"\n          required\n          value={phone}\n          onChange={handleChange}\n        />\n      </div>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default Phonebook;\n","import { useEffect } from 'react';\nimport css from './MyContacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport Phonebook from 'components/Phonebook/Phonebook';\nimport { selectAllContacts } from '../../redux/Contacts/contacts-selectors';\nimport { setFilter } from '../../redux/Filter/filter-slice';\nimport { fetchContacts } from '../../redux/Contacts/contacts-operations';\n\nconst MyContacts = () => {\n  const { items, isLoading, error } = useSelector(selectAllContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <h2 className={css.title}>Phonebook</h2>\n      <Phonebook />\n      <h2 className={css.title}>Contacts</h2>\n      <div className={css.listWrapper}>\n        <input\n          name=\"filter\"\n          onChange={changeFilter}\n          placeholder=\"Find contacts by name\"\n        />\n        {isLoading && <p>...Loading</p>}\n        {error && <p>{error}</p>}\n        {Boolean(items.length) && <ContactList />}\n      </div>\n    </div>\n  );\n};\n\nexport default MyContacts;\n","import MyContacts from 'components/MyContacts/MyContacts';\n\nconst MyContactsPage = () => {\n  return (\n    <div>\n      <h1>My books page</h1>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n"],"names":["selectAllContacts","store","contacts","selectFilteredContacts","createSelector","items","filter","normalizedFilter","toLowerCase","contact","name","includes","ContactList","useSelector","dispatch","useDispatch","elements","map","_ref","id","phone","_jsxs","className","css","children","_jsx","onClick","deleteContacts","type","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","INITIAL_STATE","nameId","phoneId","_useState","useState","_objectSpread","_useState2","_slicedToArray","value","setValue","handleChange","target","preState","_defineProperty","reset","onSubmit","e","data","preventDefault","addContacts","htmlFor","placeholder","required","onChange","_useSelector","isLoading","error","useEffect","fetchContacts","Phonebook","setFilter","Boolean","MyContacts"],"sourceRoot":""}